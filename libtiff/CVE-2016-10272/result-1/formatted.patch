diff --git a/libtiff/tif_next.c b/libtiff/tif_next.c
index 3b1a45ed..9b42dd92 100644
--- a/libtiff/tif_next.c
+++ b/libtiff/tif_next.c
@@ -1,3 +1,4 @@
+extern int __g_buf_size;
 /* $Id$ */
 
 /*
@@ -60,8 +61,11 @@ NeXTDecode(TIFF* tif, uint8* buf, tmsize_t occ, uint16 s)
 	 * white (we assume a PhotometricInterpretation
 	 * of ``min-is-black'').
 	 */
-	for (op = (unsigned char*) buf, cc = occ; cc-- > 0;)
+	for (op = (unsigned char*) buf, cc = occ; cc-- > 0;) {
+    if (buf + occ >= (char *)buf + __g_buf_size)
+      exit(0);
 		*op++ = 0xff;
+  }
 
 	bp = (unsigned char *)tif->tif_rawcp;
 	cc = tif->tif_rawcc;
diff --git a/libtiff/tif_read.c b/libtiff/tif_read.c
index 52bbf507..b3a8405e 100644
--- a/libtiff/tif_read.c
+++ b/libtiff/tif_read.c
@@ -1,3 +1,4 @@
+extern int __g_buf_size;
 /* $Id$ */
 
 /*
@@ -377,6 +378,8 @@ TIFFReadEncodedStrip(TIFF* tif, uint32 strip, void* buf, tmsize_t size)
 		stripsize=size;
 	if (!TIFFFillStrip(tif,strip))
 		return((tmsize_t)(-1));
+  if (buf + stripsize >= (char *)buf + __g_buf_size)
+    exit(0);
 	if ((*tif->tif_decodestrip)(tif,buf,stripsize,plane)<=0)
 		return((tmsize_t)(-1));
 	(*tif->tif_postdecode)(tif,buf,stripsize);
diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index b87a77a8..a3cab022 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1,3 +1,4 @@
+int __g_buf_size;
 /* $Id$ */
 
 /* tiffcrop.c -- a port of tiffcp.c extended to include manipulations of
@@ -6164,6 +6165,7 @@ loadImage(TIFF* in, struct image_data *image, struct dump_opts *dump, unsigned c
     case STRIP:
          if (planar == PLANARCONFIG_CONTIG)
            {
+       __g_buf_size = (buffsize)+(3);
 	     if (!(readContigStripsIntoBuffer(in, read_buff)))
 	     {
 	     TIFFError("loadImage", "Unable to read contiguous strips into buffer");
