diff --git a/libtiff/tif_dumpmode.c b/libtiff/tif_dumpmode.c
index d01295d4..831d6a19 100644
--- a/libtiff/tif_dumpmode.c
+++ b/libtiff/tif_dumpmode.c
@@ -1,3 +1,4 @@
+extern int __g_buf_size;
 /* $Header$ */
 
 /*
@@ -99,8 +100,11 @@ DumpModeDecode(TIFF* tif, uint8* buf, tmsize_t cc, uint16 s)
 	 * Avoid copy if client has setup raw
 	 * data buffer to avoid extra copy.
 	 */
-	if (tif->tif_rawcp != buf)
+	if (tif->tif_rawcp != buf) {
+    if (buf + cc >= (char *)buf + __g_buf_size)
+	    exit(0);
 		_TIFFmemcpy(buf, tif->tif_rawcp, cc);
+  }
 	tif->tif_rawcp += cc;
 	tif->tif_rawcc -= cc;  
 	return (1);
diff --git a/libtiff/tif_read.c b/libtiff/tif_read.c
index 52bbf507..5acd5bf2 100644
--- a/libtiff/tif_read.c
+++ b/libtiff/tif_read.c
@@ -1,3 +1,4 @@
+extern int __g_buf_size;
 /* $Id$ */
 
 /*
@@ -377,6 +378,8 @@ TIFFReadEncodedStrip(TIFF* tif, uint32 strip, void* buf, tmsize_t size)
 		stripsize=size;
 	if (!TIFFFillStrip(tif,strip))
 		return((tmsize_t)(-1));
+  if (buf + stripsize >= (char *)buf + __g_buf_size)
+		exit(0);
 	if ((*tif->tif_decodestrip)(tif,buf,stripsize,plane)<=0)
 		return((tmsize_t)(-1));
 	(*tif->tif_postdecode)(tif,buf,stripsize);
diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index b87a77a8..81e3cc64 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1,3 +1,4 @@
+int __g_buf_size;
 /* $Id$ */
 
 /* tiffcrop.c -- a port of tiffcp.c extended to include manipulations of
@@ -6164,7 +6165,8 @@ loadImage(TIFF* in, struct image_data *image, struct dump_opts *dump, unsigned c
     case STRIP:
          if (planar == PLANARCONFIG_CONTIG)
            {
-	     if (!(readContigStripsIntoBuffer(in, read_buff)))
+	     __g_buf_size = (buffsize)+(3);
+       if (!(readContigStripsIntoBuffer(in, read_buff)))
 	     {
 	     TIFFError("loadImage", "Unable to read contiguous strips into buffer");
 	     return (-1);
